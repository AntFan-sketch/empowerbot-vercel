empowerbot-vercel/
├── api/
│   └── chat.js
├── public/
│   └── chat.html
├── vercel.json
├── .gitignore
├── README.md

// File: api/chat.js
import { Configuration, OpenAIApi } from "openai";

const configuration = new Configuration({
  apiKey: process.env.OPENAI_API_KEY,
});

const openai = new OpenAIApi(configuration);

export default async function handler(req, res) {
  if (req.method !== "POST") {
    return res.status(405).json({ error: "Method not allowed" });
  }

  const { messages } = req.body;

  if (!messages || !Array.isArray(messages)) {
    return res.status(400).json({ error: "Invalid request body" });
  }

  try {
    const completion = await openai.createChatCompletion({
      model: "gpt-4",
      messages: [
        { role: "system", content: "You are EmpowerBot, a warm and patient STEM tutor for Junior and Leaving Certificate students in Ireland. Use the Socratic method. Always respond in UK English." },
        ...messages,
      ],
    });

    const reply = completion.data.choices[0].message;
    res.status(200).json({ reply });
  } catch (error) {
    console.error("OpenAI error:", error);
    res.status(500).json({ error: "Something went wrong" });
  }
}

// File: public/chat.html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>EmpowerBot</title>
  <style>
    body { font-family: sans-serif; max-width: 600px; margin: 2rem auto; padding: 1rem; }
    #chat { border: 1px solid #ccc; padding: 1rem; height: 400px; overflow-y: auto; margin-bottom: 1rem; }
    .user { color: blue; }
    .bot { color: green; }
    textarea { width: 100%; height: 60px; }
    button { margin-top: 0.5rem; }
  </style>
</head>
<body>
  <h2>EmpowerBot – STEM Tutor</h2>
  <div id="chat"></div>
  <textarea id="message" placeholder="Ask EmpowerBot a question..."></textarea><br>
  <button onclick="sendMessage()">Send</button>

  <script>
    const chat = document.getElementById('chat');

    async function sendMessage() {
      const textarea = document.getElementById('message');
      const text = textarea.value.trim();
      if (!text) return;

      appendMessage('user', text);
      textarea.value = '';

      const response = await fetch('/api/chat', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ messages: [{ role: 'user', content: text }] })
      });

      const data = await response.json();
      appendMessage('bot', data.reply.content);
    }

    function appendMessage(role, content) {
      const div = document.createElement('div');
      div.className = role;
      div.textContent = `${role === 'user' ? 'You' : 'EmpowerBot'}: ${content}`;
      chat.appendChild(div);
      chat.scrollTop = chat.scrollHeight;
    }
  </script>
</body>
</html>

// File: .gitignore
node_modules
.env

// File: vercel.json
{
  "rewrites": [
    { "source": "/", "destination": "/chat.html" }
  ]
}



// File: README.md
# EmpowerBot Chat (Vercel + OpenAI)

A simple STEM tutoring chatbot using GPT-4 and deployed on Vercel.

## Features
- Custom GPT prompt (Socratic method, Irish curriculum)
- Simple frontend chat interface
- Secure OpenAI API usage via backend

## Setup
1. Clone this repo
2. Add `.env` file with `OPENAI_API_KEY`
3. Deploy to Vercel

---



